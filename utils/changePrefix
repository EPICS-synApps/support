#!/usr/bin/perl
# changePrefix for synApps

use Cwd;
use File::Copy;

use strict;

#
# Used because perl backtick usage seems to be significantly different 
# between Linux and Windows
sub do_substitution {
	my @parms = @_;
	
	my $search = $parms[0];
	my $replace = $parms[1];
	my $file = $parms[2];
	
	rename ($file, $file . '.bak');
	open (IN, '<' . $file . '.bak') or return 0;
	open (OUT, '>' . $file) or return 0;
	while (<IN>)  {
		$_ =~ s/$search/$replace/gi;
		print OUT $_;
	}
	close (IN);
	close (OUT);
}

my $argc = @ARGV;

if ( $argc < 2 )
{
	print "usage: changePrefix old new\n";
	print "example: changePrefix xxx 1bma\n";
	exit 2;
}

my $old = $ARGV[0];
my $new = $ARGV[1];

if ( ! -d "${old}App" )
{
	print "changePrefix: ${old}App not found. Nothing done.\n";
	exit 2;
}

if ( ! -d "iocBoot" )
{
	print "changePrefix: iocBoot not found. Nothing done.\n";
	exit 2;
}

my $top = cwd();

if ( -f "start_caQtDM_${old}" )
{
	printf "\r%-50s", "start_caQtDM_${new}";
	move "start_caQtDM_${old}", "start_caQtDM_${new}";
	do_substitution("/${old}", "/${new}", "start_caQtDM_${new}");
	do_substitution("${old}.adl", "${new}.adl", "start_caQtDM_${new}");
	do_substitution("${old}.ui", "${new}.ui", "start_caQtDM_${new}");
	do_substitution("=${old}:", "=${new}:", "start_caQtDM_${new}");
	do_substitution("ioc${old}", "ioc${new}", "start_caQtDM_${new}");
	do_substitution("${old}App", "${new}App", "start_caQtDM_${new}");
	
	#chmod a+x
	my $permissions = ((stat("start_caQtDM_${new}"))[2] | oct("111"));
	chmod $permissions, "start_caQtDM_${new}";
}

if ( -f "start_MEDM_${old}" )
{
	printf "\r%-50s", "start_MEDM_${new}";
	move "start_MEDM_${old}", "start_MEDM_${new}";
	do_substitution("/${old}", "/${new}", "start_MEDM_${new}");
	do_substitution("${old}.adl", "${new}.adl", "start_MEDM_${new}");
	do_substitution("=${old}:", "=${new}:", "start_MEDM_${new}");
	do_substitution("ioc${old}", "ioc${new}", "start_MEDM_${new}");
	do_substitution("${old}App", "${new}App", "start_MEDM_${new}");
	
	#chmod a+x
	my $permissions = ((stat("start_MEDM_${new}"))[2] | oct("111"));
	chmod $permissions, "start_MEDM_${new}";
}

if ( -f "start_phoebus_${old}" )
{
	printf "\r%-50s", "start_phoebus_${new}";
	move "start_phoebus_${old}", "start_phoebus_${new}";
	do_substitution("/${old}", "/${new}", "start_phoebus_${new}");
	do_substitution("${old}.adl", "${new}.adl", "start_phoebus_${new}");
	do_substitution("=${old}:", "=${new}:", "start_phoebus_${new}");
	do_substitution("ioc${old}", "ioc${new}", "start_phoebus_${new}");
	do_substitution("${old}App", "${new}App", "start_phoebus_${new}");
	
	#chmod a+x
	my $permissions = ((stat("start_phoebus_${new}"))[2] | oct("111"));
	chmod $permissions, "start_phoebus_${new}";
}

if ( -f "setup_epics_common" )
{
	printf "\r%-50s", "setup_epics_common";
	do_substitution("/${old}", "/${new}", "setup_epics_common");
	do_substitution("${old}App", "${new}App", "setup_epics_common");
}

if ( -f "example_start_putrecorder")
{
	printf "\r%-50s", "example_start_putrecorder";
	do_substitution("/${old}", "/${new}", "example_start_putrecorder");
	do_substitution("${old}App", "${new}App", "example_start_putrecorder");
}

printf "\r%-50s", "${new}App/src";
move "${old}App", "${new}App";
chdir "${new}App/src";

if ( -f "${old}Main.c" )
{
	move "${old}Main.c", "${new}Main.c";
	do_substitution("${old}", "${new}", "${new}Main.c");
}

if ( -f "${old}Main.cpp" )
{
	move "${old}Main.cpp", "${new}Main.cpp";
	do_substitution("${old}", "${new}", "${new}Main.cpp");
}

if ( -f "${old}Support.dbd" )
{
	move "${old}Support.dbd", "${new}Support.dbd";
}

foreach my $file (glob("*${old}*Include.dbd"))
{
	if ( -f $file )
	{
		do_substitution("/Include\\.dbd/${old}", "${new}", $file);
		my $newfile=~s/$old/$new/g;
		move $file, $newfile;
	}
}

do_substitution("ioc${old}", "ioc${new}", "Makefile");
do_substitution("PROD_NAME = ${old}", "PROD_NAME = ${new}", "Makefile");

printf "\r%-50s", "${new}App/Db";
chdir "${top}/${new}App/Db";
do_substitution("${old}.dbd", "${new}.dbd", "Makefile");
do_substitution("${old}.template", "${new}.template", "Makefile");
do_substitution("${old}Include", "${new}Include", "Makefile");
do_substitution("${old}", "${new}", "Makefile");

printf "\r%-50s", "iocBoot/";
chdir "${top}/iocBoot";

if (-d "ioc${old}" )
{
	move "ioc${old}", "ioc${new}";
}

foreach my $dir (glob("ioc*"))
{
	chdir $dir;
	
	foreach my $file (glob("*.cmd*"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", "$file";

			if ("$file" eq "st.cmd.vxWorks")
			{
				do_substitution("ioc${old}>", "ioc${new}>", $file);
			}
			else
			{
				do_substitution("/${old}", "/${new}", $file);
				do_substitution("${old}:", "${new}:", $file);
				do_substitution("${old}\\.", "${new}.", $file);
				do_substitution("ioc${old}", "ioc${new}", $file);
				do_substitution("${old}Lib", "${new}Lib", $file);
				do_substitution("${old}App", "${new}App", $file);
				do_substitution("=${old}", "=${new}", $file);
			}
		}
	}
	
	foreach my $file (glob("*.iocsh*"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", "$file";
			do_substitution("/${old}", "/${new}", $file);
			do_substitution("${old}:", "${new}:", $file);
			do_substitution("${old}\\.", "${new}.", $file);
			do_substitution("ioc${old}", "ioc${new}", $file);
			do_substitution("${old}Lib", "${new}Lib", $file);
			do_substitution("${old}App", "${new}App", $file);
			do_substitution("=${old}", "=${new}", $file);
		}
	}
	
	foreach my $file (glob("auto*.req"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}:", "${new}:", $file);
		}
	}
	
	foreach my $file (glob("autosave/*.cfg"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}:", "${new}:", $file);
		}
	}
	
	foreach my $file (glob("*.substitutions"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}", "${new}", $file);
			do_substitution("${old}:", "${new}:", $file);
			do_substitution("${old}App", "${new}App", $file);
		}
	}
	
	foreach my $file (glob("substitutions/*.substitutions"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}", "${new}", $file);
			do_substitution("${old}:", "${new}:", $file);
			do_substitution("${old}App", "${new}App", $file);
		}
	}
	
	foreach my $file (glob("*.template"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}:", "${new}:", $file);
		}
	}
	
	if ( -f "interp.sav" )
	{
		do_substitution("${old}", "${new}", "interp.sav");
	}
	
	if ( -f "bootParms" )
	{
		do_substitution("/${old}", "/${new}", "bootParms");
		do_substitution("ioc${old}", "ioc${new}", "bootParms");
	}
	
	if ( -f "softioc/run" )
	{
		do_substitution("${old}", "${new}", "softioc/run");
	}
	
	if ( -f "softioc/in-screen.sh" )
	{
		do_substitution("${old}", "${new}", "softioc/in-screen.sh");
	}
	
	if ( -f "softioc/${old}.pl" )
	{
		do_substitution("${old}", "${new}", "softioc/${old}.pl");
		move "softioc/${old}.pl", "softioc/${new}.pl";
	}
	
	chdir ".."
}

printf "\r%-50s", "${new}App/op/adl";
chdir "${top}/${new}App/op/adl";
move "${old}.adl", "${new}.adl";

foreach my $file (glob("*.adl"))
{
	printf "\r%-50s", $file;
	do_substitution("${old}:", "${new}:", $file);
	do_substitution("=${old}", "=${new}", $file);
	do_substitution("${old}App", "${new}App", $file);
	do_substitution("${old}\\.adl", "${new}.adl", $file);
}

chdir "${top}/${new}App/op";
if ( -d "./opi" )
{
	printf "\r%-50s", "${new}App/op/opi";
	chdir "opi";
	
	move "${old}.opi", "${new}.opi";
	move "autoconvert/${old}.opi", "autoconvert/${new}.opi";
	
	foreach my $file (glob("*.opi"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}", "${new}", $file);
		}
	}
	
	foreach my $file (glob("autoconvert/*.opi"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}", "${new}", $file);
		}
	}
}

chdir "${top}/${new}App/op";
if ( -d "./ui" )
{
	printf "\r%-50s", "${new}App/op/ui";
	chdir "ui";
	
	move "${old}.ui", "${new}.ui";
	move "autoconvert/${old}.ui", "autoconvert/${new}.ui";
	
	foreach my $file (glob("*.ui"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}", "${new}", $file);
		}
	}
	
	foreach my $file (glob("autoconvert/*.ui"))
	{
		if ( -f $file )
		{
			printf "\r%-50s", $file;
			do_substitution("${old}", "${new}", $file);
		}
	}
}

chdir "${top}/${new}App/op";
if ( -d "./burt" )
{
	printf "\r%-50s", "${new}App/op/burt";
	chdir "burt";
	foreach my $file (glob("*"))
	{
		printf "\r%-50s", $file;
		do_substitution("${old}", "${new}", $file);
	}
}

chdir "${top}/${new}App/op";
if ( -d "./python" )
{
	printf "\r%-50s", "${new}App/op/python";
	chdir "python";


	if ( -f "macros_${old}.py" )
	{
		move "macros_${old}.py", "macros_${new}.py";
	}

	foreach my $file (glob("*"))
	{
		printf "\r%-50s", $file;
		do_substitution("${old}:", "${new}:", $file);
	}
}

printf "\r%-50s\n", "Done.";
